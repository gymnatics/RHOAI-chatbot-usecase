issue_id,answer_id,author,creation_time,issue_body,answer_body
456983,0,almet,2010-12-05T17:31:55+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.","If we do add the SITEURL value, it can break because sometimes this value is simply not set. I want pelican to stay ""relative urls compliant"". One idea I can think of is analysing the HTML content given by the reader, looking for src=/img= that are relative, and then, depending on where those will be output, use the utils.get_relative_path to prefix those links/images. it's a bit hackish, but I can't think of a better way to do so. what do you think ?"
456983,1,Gui13,2010-12-05T17:43:43+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.","A bit hackish for sure, but I'm not yet good enough in python to see another alternative when no SITEURL is set."
456983,2,almet,2010-12-05T17:45:28+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.","okay, let's go for that so. Will do that when I'll get some spare time (it's a working sunday :)) thanks for the report !"
456983,3,almet,2010-12-14T15:57:04+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.","arnaud is currently working on that, see his fork at <link>"
456983,4,Gui13,2010-12-21T21:02:19+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.",Should this bug be closed now?
456983,5,Gui13,2010-12-21T21:02:53+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.",Well... clicked the wrong button. It is now.
456983,6,almet,2010-12-22T02:13:48+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.",not yet. Arnaud is still working on that (and discovering python at the same time). It will be soon :)
648603,0,codesplicer,2011-03-05T18:40:27+00:00,"if you render 5 templates deep, and that template throws an error currently express seems to try and next() each time, causing obvious issues","Having a similar issue when rendering partials, getting the following dumped repeatedly in console: Error: Can't set headers after they are sent. at ServerResponse.<anonymous> (<link> at ServerResponse.setHeader (/home/codesplicer/local/lib/node/.npm/connect/1.0.3/package/lib/patch.js:39:15) at IncomingMessage.next (/home/codesplicer/local/lib/node/.npm/connect/1.0.3/package/lib/<link> at error (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:274:16) at ServerResponse.render (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:286:12) at render (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:94:16) at renderPartial (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:114:12) at Object.partial (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:267:12) at Object.anonymous (eval at <anonymous> (/home/codesplicer/local/lib/node/.npm/jade/0.8.1/package/lib/jade.js:227:10)) at ServerResponse.render (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:284:24)"
648603,1,indutny,2011-03-14T10:48:22+00:00,"if you render 5 templates deep, and that template throws an error currently express seems to try and next() each time, causing obvious issues","Problem is in partials itself, you're not adding ""/partial"" to root when trying to find template file, and there're some problems w/ nested templates (ie parent option in View object)"
648603,2,tj,2011-03-14T14:14:40+00:00,"if you render 5 templates deep, and that template throws an error currently express seems to try and next() each time, causing obvious issues","the partials directory lookup has been removed for 2.0, it's always relative now, but ya ill have to look into the recursion thing soon. It's mostly fine but the exception unwind has new issues, I suspect this issue always existed but now node is more vocal about the issue"
648603,3,tj,2011-03-23T17:40:10+00:00,"if you render 5 templates deep, and that template throws an error currently express seems to try and next() each time, causing obvious issues",should be fixed
798136,0,slaskis,2011-04-21T09:56:55+00:00,"I have an app which is using connect.vhost to redirect to a few express servers and after updating express I noticed an issue with view being read from the wrong server. My setup is something like this: vhosts.js a/server.js a/views/index.js a/views/athing.js b/server.js b/views/index.js b/views/bthing.js Where vhosts.js is a simple connect server, running through cluster with these vhosts: - a.example.com -> a/server.js - b.example.com -> b/server.js I guess the problem is that both servers have a view like ""./views/index.js"". It seems it attempts to render the view of the server that was visited first, no matter which one of the servers you visit, which causes a crash because both servers don't use the same locals and well, it's just the wrong view being rendered. Could it be that the cache is not using an absolute path for the views? And it used to before 2.2.1?","Just so I can find it again (compare view is not easy to find on github), the issue is here somewhere: <link>"
798136,1,slaskis,2011-04-21T10:01:13+00:00,"I have an app which is using connect.vhost to redirect to a few express servers and after updating express I noticed an issue with view being read from the wrong server. My setup is something like this: vhosts.js a/server.js a/views/index.js a/views/athing.js b/server.js b/views/index.js b/views/bthing.js Where vhosts.js is a simple connect server, running through cluster with these vhosts: - a.example.com -> a/server.js - b.example.com -> b/server.js I guess the problem is that both servers have a view like ""./views/index.js"". It seems it attempts to render the view of the server that was visited first, no matter which one of the servers you visit, which causes a crash because both servers don't use the same locals and well, it's just the wrong view being rendered. Could it be that the cache is not using an absolute path for the views? And it used to before 2.2.1?",Most likely this commit? <link>
798136,2,slaskis,2011-04-21T10:26:55+00:00,"I have an app which is using connect.vhost to redirect to a few express servers and after updating express I noticed an issue with view being read from the wrong server. My setup is something like this: vhosts.js a/server.js a/views/index.js a/views/athing.js b/server.js b/views/index.js b/views/bthing.js Where vhosts.js is a simple connect server, running through cluster with these vhosts: - a.example.com -> a/server.js - b.example.com -> b/server.js I guess the problem is that both servers have a view like ""./views/index.js"". It seems it attempts to render the view of the server that was visited first, no matter which one of the servers you visit, which causes a crash because both servers don't use the same locals and well, it's just the wrong view being rendered. Could it be that the cache is not using an absolute path for the views? And it used to before 2.2.1?",To complete this issue I've set up a little test repo: <link>
798136,3,tj,2011-04-21T15:41:17+00:00,"I have an app which is using connect.vhost to redirect to a few express servers and after updating express I noticed an issue with view being read from the wrong server. My setup is something like this: vhosts.js a/server.js a/views/index.js a/views/athing.js b/server.js b/views/index.js b/views/bthing.js Where vhosts.js is a simple connect server, running through cluster with these vhosts: - a.example.com -> a/server.js - b.example.com -> b/server.js I guess the problem is that both servers have a view like ""./views/index.js"". It seems it attempts to render the view of the server that was visited first, no matter which one of the servers you visit, which causes a crash because both servers don't use the same locals and well, it's just the wrong view being rendered. Could it be that the cache is not using an absolute path for the views? And it used to before 2.2.1?","ah interesting, yeah I can totally see that being an issue. we just need to ""namespace"" the key. Yeah it's currently just the pass you originally passed in to render() so that on subsequent requests we do not need to resolve the entire thing. Perhaps even a simple app id would work"
814067,0,almet,2011-04-26T12:44:53+00:00,"Hello, There is a problem with the Pelican's license: According to [this page](<link> _«a copyright notice»_ and _«a statement of copying permission»_ must be present in the header of **all** files of Pelican, like this: ``` #!/usr/bin/env python # -*- coding: utf-8 -*- # # # Copyright (c) 20XX-2011 XXXXXX XXXXXXX # # This file is part of Pelican. # # Pelican is free software: you can redistribute it and/or modify # it under the terms of the GNU Affero General Public License as published by # the Free Software Foundation, either version 3 of the License, or # (at your option) any later version. # # Pelican is distributed in the hope that it will be useful, # but WITHOUT ANY WARRANTY; without even the implied warranty of # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the # GNU Affero General Public License for more details. # # You should have received a copy of the GNU Affero General Public License # along with Pelican. If not, see <<link> # ``` But this text is only present in the `LICENSE` file, instead of the [complete license](<link>","Having a header like this one in _all_ pelican's files seems more than annoying to me. After some search, it seems that the recommended practice is to to add the notice in every file, but not doing so will not invalidate the license or change the meaning of it (<link> Anyway, I will change the LICENSE text."
814067,1,ghost,2011-04-26T16:04:56+00:00,"Hello, There is a problem with the Pelican's license: According to [this page](<link> _«a copyright notice»_ and _«a statement of copying permission»_ must be present in the header of **all** files of Pelican, like this: ``` #!/usr/bin/env python # -*- coding: utf-8 -*- # # # Copyright (c) 20XX-2011 XXXXXX XXXXXXX # # This file is part of Pelican. # # Pelican is free software: you can redistribute it and/or modify # it under the terms of the GNU Affero General Public License as published by # the Free Software Foundation, either version 3 of the License, or # (at your option) any later version. # # Pelican is distributed in the hope that it will be useful, # but WITHOUT ANY WARRANTY; without even the implied warranty of # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the # GNU Affero General Public License for more details. # # You should have received a copy of the GNU Affero General Public License # along with Pelican. If not, see <<link> # ``` But this text is only present in the `LICENSE` file, instead of the [complete license](<link>","> After some search, it seems that the recommended practice is to to add the notice in every file, but not doing so will not invalidate the license Interesting, I did not know."
984126,0,ghost,2011-06-01T15:57:00+00:00,"Hi, I'm just about to migrate to pelican and for the start I'd likt to use the ""notmyidea"" theme. But the ""Other Articles"" section at the bottom of the index page looks a bit strange: <link> Is it really supposed to look like this? Cheers brejoc","Hello, No, as far as i know, it's not supposed to looks like this: The articles are normally displayed in a list. But I've recompiled my blog with this theme and i can see i have the same problem. It's probably a missing closing tag in the HTML code of the theme, i'm currently reading this code, and i'll keep you informed..."
984126,1,ghost,2011-06-01T16:55:57+00:00,"Hi, I'm just about to migrate to pelican and for the start I'd likt to use the ""notmyidea"" theme. But the ""Other Articles"" section at the bottom of the index page looks a bit strange: <link> Is it really supposed to look like this? Cheers brejoc","It seems it was a CSS problem: I've added the following code to the CSS stylesheet of the theme, and now it works with my web browser (Chromium): ``` .hentry { display: block; clear: both; } ``` Can you confirm that it works ? Thank in advance."
984126,2,brejoc,2011-06-01T18:22:46+00:00,"Hi, I'm just about to migrate to pelican and for the start I'd likt to use the ""notmyidea"" theme. But the ""Other Articles"" section at the bottom of the index page looks a bit strange: <link> Is it really supposed to look like this? Cheers brejoc",Perfect! Works like a charm with Chrome and Firefox. Thanks!
