issue_id,answer_id,author,creation_time,issue_body,answer_body
456983,0,almet,2010-12-05T17:31:55+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.","If we do add the SITEURL value, it can break because sometimes this value is simply not set. I want pelican to stay ""relative urls compliant"". One idea I can think of is analysing the HTML content given by the reader, looking for src=/img= that are relative, and then, depending on where those will be output, use the utils.get_relative_path to prefix those links/images. it's a bit hackish, but I can't think of a better way to do so. what do you think ?"
456983,1,Gui13,2010-12-05T17:43:43+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.","A bit hackish for sure, but I'm not yet good enough in python to see another alternative when no SITEURL is set."
456983,2,almet,2010-12-05T17:45:28+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.","okay, let's go for that so. Will do that when I'll get some spare time (it's a working sunday :)) thanks for the report !"
456983,3,almet,2010-12-14T15:57:04+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.","arnaud is currently working on that, see his fork at <link>"
456983,4,Gui13,2010-12-21T21:02:19+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.",Should this bug be closed now?
456983,5,Gui13,2010-12-21T21:02:53+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.",Well... clicked the wrong button. It is now.
456983,6,almet,2010-12-22T02:13:48+00:00,"Hey, Say I add an image in my article, giving it a _relative_ address, like `content/my_image.jpg`. My article has a category `category`. It works well in the root directory, but since the articles also appear in the categories, the relative address which was `content/my_image.jpg` is now translated in `category/content/my_image.jpg`. I see one solution, using the site address to handle these kind of relative addresses: we simply prefix the relative address with the SITEURL value.",not yet. Arnaud is still working on that (and discovering python at the same time). It will be soon :)
648603,0,codesplicer,2011-03-05T18:40:27+00:00,"if you render 5 templates deep, and that template throws an error currently express seems to try and next() each time, causing obvious issues","Having a similar issue when rendering partials, getting the following dumped repeatedly in console: Error: Can't set headers after they are sent. at ServerResponse.<anonymous> (<link> at ServerResponse.setHeader (/home/codesplicer/local/lib/node/.npm/connect/1.0.3/package/lib/patch.js:39:15) at IncomingMessage.next (/home/codesplicer/local/lib/node/.npm/connect/1.0.3/package/lib/<link> at error (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:274:16) at ServerResponse.render (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:286:12) at render (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:94:16) at renderPartial (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:114:12) at Object.partial (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:267:12) at Object.anonymous (eval at <anonymous> (/home/codesplicer/local/lib/node/.npm/jade/0.8.1/package/lib/jade.js:227:10)) at ServerResponse.render (/home/codesplicer/local/lib/node/.npm/express/2.0.0beta/package/lib/view.js:284:24)"
648603,1,indutny,2011-03-14T10:48:22+00:00,"if you render 5 templates deep, and that template throws an error currently express seems to try and next() each time, causing obvious issues","Problem is in partials itself, you're not adding ""/partial"" to root when trying to find template file, and there're some problems w/ nested templates (ie parent option in View object)"
648603,2,tj,2011-03-14T14:14:40+00:00,"if you render 5 templates deep, and that template throws an error currently express seems to try and next() each time, causing obvious issues","the partials directory lookup has been removed for 2.0, it's always relative now, but ya ill have to look into the recursion thing soon. It's mostly fine but the exception unwind has new issues, I suspect this issue always existed but now node is more vocal about the issue"
648603,3,tj,2011-03-23T17:40:10+00:00,"if you render 5 templates deep, and that template throws an error currently express seems to try and next() each time, causing obvious issues",should be fixed
798136,0,slaskis,2011-04-21T09:56:55+00:00,"I have an app which is using connect.vhost to redirect to a few express servers and after updating express I noticed an issue with view being read from the wrong server. My setup is something like this: vhosts.js a/server.js a/views/index.js a/views/athing.js b/server.js b/views/index.js b/views/bthing.js Where vhosts.js is a simple connect server, running through cluster with these vhosts: - a.example.com -> a/server.js - b.example.com -> b/server.js I guess the problem is that both servers have a view like ""./views/index.js"". It seems it attempts to render the view of the server that was visited first, no matter which one of the servers you visit, which causes a crash because both servers don't use the same locals and well, it's just the wrong view being rendered. Could it be that the cache is not using an absolute path for the views? And it used to before 2.2.1?","Just so I can find it again (compare view is not easy to find on github), the issue is here somewhere: <link>"
798136,1,slaskis,2011-04-21T10:01:13+00:00,"I have an app which is using connect.vhost to redirect to a few express servers and after updating express I noticed an issue with view being read from the wrong server. My setup is something like this: vhosts.js a/server.js a/views/index.js a/views/athing.js b/server.js b/views/index.js b/views/bthing.js Where vhosts.js is a simple connect server, running through cluster with these vhosts: - a.example.com -> a/server.js - b.example.com -> b/server.js I guess the problem is that both servers have a view like ""./views/index.js"". It seems it attempts to render the view of the server that was visited first, no matter which one of the servers you visit, which causes a crash because both servers don't use the same locals and well, it's just the wrong view being rendered. Could it be that the cache is not using an absolute path for the views? And it used to before 2.2.1?",Most likely this commit? <link>
798136,2,slaskis,2011-04-21T10:26:55+00:00,"I have an app which is using connect.vhost to redirect to a few express servers and after updating express I noticed an issue with view being read from the wrong server. My setup is something like this: vhosts.js a/server.js a/views/index.js a/views/athing.js b/server.js b/views/index.js b/views/bthing.js Where vhosts.js is a simple connect server, running through cluster with these vhosts: - a.example.com -> a/server.js - b.example.com -> b/server.js I guess the problem is that both servers have a view like ""./views/index.js"". It seems it attempts to render the view of the server that was visited first, no matter which one of the servers you visit, which causes a crash because both servers don't use the same locals and well, it's just the wrong view being rendered. Could it be that the cache is not using an absolute path for the views? And it used to before 2.2.1?",To complete this issue I've set up a little test repo: <link>
798136,3,tj,2011-04-21T15:41:17+00:00,"I have an app which is using connect.vhost to redirect to a few express servers and after updating express I noticed an issue with view being read from the wrong server. My setup is something like this: vhosts.js a/server.js a/views/index.js a/views/athing.js b/server.js b/views/index.js b/views/bthing.js Where vhosts.js is a simple connect server, running through cluster with these vhosts: - a.example.com -> a/server.js - b.example.com -> b/server.js I guess the problem is that both servers have a view like ""./views/index.js"". It seems it attempts to render the view of the server that was visited first, no matter which one of the servers you visit, which causes a crash because both servers don't use the same locals and well, it's just the wrong view being rendered. Could it be that the cache is not using an absolute path for the views? And it used to before 2.2.1?","ah interesting, yeah I can totally see that being an issue. we just need to ""namespace"" the key. Yeah it's currently just the pass you originally passed in to render() so that on subsequent requests we do not need to resolve the entire thing. Perhaps even a simple app id would work"
814067,0,almet,2011-04-26T12:44:53+00:00,"Hello, There is a problem with the Pelican's license: According to [this page](<link> _«a copyright notice»_ and _«a statement of copying permission»_ must be present in the header of **all** files of Pelican, like this: ``` #!/usr/bin/env python # -*- coding: utf-8 -*- # # # Copyright (c) 20XX-2011 XXXXXX XXXXXXX # # This file is part of Pelican. # # Pelican is free software: you can redistribute it and/or modify # it under the terms of the GNU Affero General Public License as published by # the Free Software Foundation, either version 3 of the License, or # (at your option) any later version. # # Pelican is distributed in the hope that it will be useful, # but WITHOUT ANY WARRANTY; without even the implied warranty of # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the # GNU Affero General Public License for more details. # # You should have received a copy of the GNU Affero General Public License # along with Pelican. If not, see <<link> # ``` But this text is only present in the `LICENSE` file, instead of the [complete license](<link>","Having a header like this one in _all_ pelican's files seems more than annoying to me. After some search, it seems that the recommended practice is to to add the notice in every file, but not doing so will not invalidate the license or change the meaning of it (<link> Anyway, I will change the LICENSE text."
814067,1,ghost,2011-04-26T16:04:56+00:00,"Hello, There is a problem with the Pelican's license: According to [this page](<link> _«a copyright notice»_ and _«a statement of copying permission»_ must be present in the header of **all** files of Pelican, like this: ``` #!/usr/bin/env python # -*- coding: utf-8 -*- # # # Copyright (c) 20XX-2011 XXXXXX XXXXXXX # # This file is part of Pelican. # # Pelican is free software: you can redistribute it and/or modify # it under the terms of the GNU Affero General Public License as published by # the Free Software Foundation, either version 3 of the License, or # (at your option) any later version. # # Pelican is distributed in the hope that it will be useful, # but WITHOUT ANY WARRANTY; without even the implied warranty of # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the # GNU Affero General Public License for more details. # # You should have received a copy of the GNU Affero General Public License # along with Pelican. If not, see <<link> # ``` But this text is only present in the `LICENSE` file, instead of the [complete license](<link>","> After some search, it seems that the recommended practice is to to add the notice in every file, but not doing so will not invalidate the license Interesting, I did not know."
984126,0,ghost,2011-06-01T15:57:00+00:00,"Hi, I'm just about to migrate to pelican and for the start I'd likt to use the ""notmyidea"" theme. But the ""Other Articles"" section at the bottom of the index page looks a bit strange: <link> Is it really supposed to look like this? Cheers brejoc","Hello, No, as far as i know, it's not supposed to looks like this: The articles are normally displayed in a list. But I've recompiled my blog with this theme and i can see i have the same problem. It's probably a missing closing tag in the HTML code of the theme, i'm currently reading this code, and i'll keep you informed..."
984126,1,ghost,2011-06-01T16:55:57+00:00,"Hi, I'm just about to migrate to pelican and for the start I'd likt to use the ""notmyidea"" theme. But the ""Other Articles"" section at the bottom of the index page looks a bit strange: <link> Is it really supposed to look like this? Cheers brejoc","It seems it was a CSS problem: I've added the following code to the CSS stylesheet of the theme, and now it works with my web browser (Chromium): ``` .hentry { display: block; clear: both; } ``` Can you confirm that it works ? Thank in advance."
984126,2,brejoc,2011-06-01T18:22:46+00:00,"Hi, I'm just about to migrate to pelican and for the start I'd likt to use the ""notmyidea"" theme. But the ""Other Articles"" section at the bottom of the index page looks a bit strange: <link> Is it really supposed to look like this? Cheers brejoc",Perfect! Works like a charm with Chrome and Firefox. Thanks!
984126,3,almet,2011-06-09T15:31:15+00:00,"Hi, I'm just about to migrate to pelican and for the start I'd likt to use the ""notmyidea"" theme. But the ""Other Articles"" section at the bottom of the index page looks a bit strange: <link> Is it really supposed to look like this? Cheers brejoc","Hi, It seems to be related to the content of the articles: if no content is detected, then the articles seems to float right to each others, which makes it looks weird like that. Can you check that your articles have any content ? If they do then it's probably something different. I stay open to any modification in the theme to avoid such weird display, Thanks for the feedback"
984126,4,ghost,2011-06-09T17:40:07+00:00,"Hi, I'm just about to migrate to pelican and for the start I'd likt to use the ""notmyidea"" theme. But the ""Other Articles"" section at the bottom of the index page looks a bit strange: <link> Is it really supposed to look like this? Cheers brejoc","Hello, I reproduced the bug with the content of my blog, so the articles was not empty ... Alternatively, maybe setting the width of the articles to 100% will avoid they overlap... But what is wrong with my modifications ? They seems to resolve the problem (i'll verify a second time) ... --- EDIT: i've just checked, and i can't reproduce the bug"
984126,5,almet,2011-06-09T17:51:34+00:00,"Hi, I'm just about to migrate to pelican and for the start I'd likt to use the ""notmyidea"" theme. But the ""Other Articles"" section at the bottom of the index page looks a bit strange: <link> Is it really supposed to look like this? Cheers brejoc",great !
998441,0,kmike,2011-06-03T13:51:38+00:00,"Hi, I'm trying pelican (which is exactly what I need) but I can't get it work with code snippets, when I try to generate : ``` :date: 2011-06-03 14:21 :title: test :tags: hello :slug: hi Hello .. code-block:: python3 def hello(): pass ``` I get the following error : ``` ./hello.rst:8: (ERROR/3) Unknown directive type ""code-block"". .. code-block:: python3 def hello(): pass ``` Any idea ?",You've missed the blank line after the code-block directive.
998441,1,ghost,2011-06-03T16:17:58+00:00,"Hi, I'm trying pelican (which is exactly what I need) but I can't get it work with code snippets, when I try to generate : ``` :date: 2011-06-03 14:21 :title: test :tags: hello :slug: hi Hello .. code-block:: python3 def hello(): pass ``` I get the following error : ``` ./hello.rst:8: (ERROR/3) Unknown directive type ""code-block"". .. code-block:: python3 def hello(): pass ``` Any idea ?","Hello, kmike is right, the code should be written like this: ``` :date: 2011-06-03 14:21 :title: test :tags: hello :slug: hi Hello .. code-block:: python3 def hello(): pass ``` But this is [an error in the documentation](<link> i'll fix that right away"
998441,2,ghost,2011-06-03T16:29:41+00:00,"Hi, I'm trying pelican (which is exactly what I need) but I can't get it work with code snippets, when I try to generate : ``` :date: 2011-06-03 14:21 :title: test :tags: hello :slug: hi Hello .. code-block:: python3 def hello(): pass ``` I get the following error : ``` ./hello.rst:8: (ERROR/3) Unknown directive type ""code-block"". .. code-block:: python3 def hello(): pass ``` Any idea ?",That's done :-)
998441,3,Alexis-D,2011-06-03T17:17:29+00:00,"Hi, I'm trying pelican (which is exactly what I need) but I can't get it work with code snippets, when I try to generate : ``` :date: 2011-06-03 14:21 :title: test :tags: hello :slug: hi Hello .. code-block:: python3 def hello(): pass ``` I get the following error : ``` ./hello.rst:8: (ERROR/3) Unknown directive type ""code-block"". .. code-block:: python3 def hello(): pass ``` Any idea ?","Ok, thanks :) ## I tested with the new line, and it still doesn't work :("
998441,4,ghost,2011-06-04T12:40:02+00:00,"Hi, I'm trying pelican (which is exactly what I need) but I can't get it work with code snippets, when I try to generate : ``` :date: 2011-06-03 14:21 :title: test :tags: hello :slug: hi Hello .. code-block:: python3 def hello(): pass ``` I get the following error : ``` ./hello.rst:8: (ERROR/3) Unknown directive type ""code-block"". .. code-block:: python3 def hello(): pass ``` Any idea ?",Strange... Can you post your article and the complete output of Pelican ?
998441,5,Alexis-D,2011-06-04T13:44:49+00:00,"Hi, I'm trying pelican (which is exactly what I need) but I can't get it work with code snippets, when I try to generate : ``` :date: 2011-06-03 14:21 :title: test :tags: hello :slug: hi Hello .. code-block:: python3 def hello(): pass ``` I get the following error : ``` ./hello.rst:8: (ERROR/3) Unknown directive type ""code-block"". .. code-block:: python3 def hello(): pass ``` Any idea ?","Forgive me, I have no idea of what I've done but now it works perfectly :)"
998441,6,earthastronaut,2014-03-14T00:54:03+00:00,"Hi, I'm trying pelican (which is exactly what I need) but I can't get it work with code snippets, when I try to generate : ``` :date: 2011-06-03 14:21 :title: test :tags: hello :slug: hi Hello .. code-block:: python3 def hello(): pass ``` I get the following error : ``` ./hello.rst:8: (ERROR/3) Unknown directive type ""code-block"". .. code-block:: python3 def hello(): pass ``` Any idea ?",I got this error too when I was using sphinx 1.1.2 Just in case someone else comes across this I fixed by updating sphinx to 1.2.2 using pip ``` pip install --upgrade sphinx ```
2349963,0,antirez,2011-11-25T15:02:52+00:00,"The page about **data types** <link> mentions that _A String value can be at max 512 Megabytes in length._, but on the page **A fifteen minute introduction to Redis data types** <link> says: _Values can be strings (including binary data) of every kind, for instance you can store a jpeg image inside a key. A value can't be bigger than 1 Gigabyte._ which one is correct?","Hi, used to be 1GB, was later modified to 512MB so that the whole space is addressable as a bitmap using an integer that is an unsigned 32 bit number. I'll fix that."
2349963,1,rlazo,2011-11-25T15:20:12+00:00,"The page about **data types** <link> mentions that _A String value can be at max 512 Megabytes in length._, but on the page **A fifteen minute introduction to Redis data types** <link> says: _Values can be strings (including binary data) of every kind, for instance you can store a jpeg image inside a key. A value can't be bigger than 1 Gigabyte._ which one is correct?","Great, thanks! that was fast"
2349963,2,AndrewGuenther,2012-02-18T06:52:01+00:00,"The page about **data types** <link> mentions that _A String value can be at max 512 Megabytes in length._, but on the page **A fifteen minute introduction to Redis data types** <link> says: _Values can be strings (including binary data) of every kind, for instance you can store a jpeg image inside a key. A value can't be bigger than 1 Gigabyte._ which one is correct?",", Seems you fixed this issue, any reason why it hasn't been closed yet?"
2891909,0,almet,2012-02-26T12:30:34+00:00,"I'd love support for additional Markdown file extensions. The most common seem to be .markdown and .mdown, but .txt would also be great.","Thanks for the notice. I don't know if you're a dev, or if you want to work on this? This is a pretty simple change. You have to make the ""extension"" attribute of the readers (in `readers.py`) a list instead of a string, and then loop on these to select the right reader in `read_file`."
2891909,1,dfrakes,2012-02-26T19:39:36+00:00,"I'd love support for additional Markdown file extensions. The most common seem to be .markdown and .mdown, but .txt would also be great.","Thanks for the reply. Unfortunately, I'm not a dev. If it's simple, I'd love it if one of the devs could tackle this."
2891909,2,almet,2012-02-26T20:01:25+00:00,"I'd love support for additional Markdown file extensions. The most common seem to be .markdown and .mdown, but .txt would also be great.","Sure, I try to ask the people to implement what they want whenever possible, but if not, of course some devs will tackle this for you. -- Alex"
2891909,3,jokull,2012-02-26T21:04:38+00:00,"I'd love support for additional Markdown file extensions. The most common seem to be .markdown and .mdown, but .txt would also be great.",This get's asked about in Calepin too. Might pick this up at some point (too busy these days to spent a lot of time on calepin though ; (
2891909,4,almet,2012-03-12T11:24:11+00:00,"I'd love support for additional Markdown file extensions. The most common seem to be .markdown and .mdown, but .txt would also be great.","Does a MARKDOWN_EXT = ('md', 'txt') would do what you want? Are you thinking about another way to do it?"
3052375,0,almet,2012-02-01T14:40:07+00:00,"SET in pelican.conf.py: `STATIC_PATHS = [""images"",]` Post a post with: `![ALT-Description](images/a-image-file.jpg)` In the post the image links to: _<link> your-site.com/static/images/a-image-file.jpg_ The output is correct and the image show in entrys, archives, etc. **Working as intended**. NOW do the same in a PAGE file: Create in /pages/ a page file for example `about.md` with a image using same code: `![ALT-Description](images/a-image-file.jpg)` Now in the page the image links to: _<link> your-site.com/**pages/**static/images/a-image-file.jpg_ Is a bug?","I think it is, yes. The way static path and images are handled is not completely satisfying ATM. Here's a pointer to the function that may not do its job properly: <link>"
3052375,1,Armonth,2012-02-01T15:21:46+00:00,"SET in pelican.conf.py: `STATIC_PATHS = [""images"",]` Post a post with: `![ALT-Description](images/a-image-file.jpg)` In the post the image links to: _<link> your-site.com/static/images/a-image-file.jpg_ The output is correct and the image show in entrys, archives, etc. **Working as intended**. NOW do the same in a PAGE file: Create in /pages/ a page file for example `about.md` with a image using same code: `![ALT-Description](images/a-image-file.jpg)` Now in the page the image links to: _<link> your-site.com/**pages/**static/images/a-image-file.jpg_ Is a bug?","Another one related... this using : `RELATIVE_URLS = False` ATM I'm using relative urls (True) but in the future I want use False for full URLs... If you use Full URLS (False value) the urls of static paths seems to works (in entrys, in pages still don't working) inconsistently... And if you use a permalink structure for articles (my is: `ARTICLE_PERMALINK_STRUCTURE = '%(category)s/'`) + FULL URLS the images url is again incorrect: <link> yoursite.com/**category/**static/images/blablabla..."
3052375,2,gwutz,2012-02-22T10:28:38+00:00,"SET in pelican.conf.py: `STATIC_PATHS = [""images"",]` Post a post with: `![ALT-Description](images/a-image-file.jpg)` In the post the image links to: _<link> your-site.com/static/images/a-image-file.jpg_ The output is correct and the image show in entrys, archives, etc. **Working as intended**. NOW do the same in a PAGE file: Create in /pages/ a page file for example `about.md` with a image using same code: `![ALT-Description](images/a-image-file.jpg)` Now in the page the image links to: _<link> your-site.com/**pages/**static/images/a-image-file.jpg_ Is a bug?",The same issue appears in article.summary. I tested first the notmyidea theme and all works like expected. Then i switched to simple and in index.html my image points to BLOGURL/images/image.png instead of BLOGURL/static/images/image.png This happens because simple only prints article.summary in index.html - notmyidea prints for the first article article.content
3052375,3,tomatic,2012-03-16T10:08:40+00:00,"SET in pelican.conf.py: `STATIC_PATHS = [""images"",]` Post a post with: `![ALT-Description](images/a-image-file.jpg)` In the post the image links to: _<link> your-site.com/static/images/a-image-file.jpg_ The output is correct and the image show in entrys, archives, etc. **Working as intended**. NOW do the same in a PAGE file: Create in /pages/ a page file for example `about.md` with a image using same code: `![ALT-Description](images/a-image-file.jpg)` Now in the page the image links to: _<link> your-site.com/**pages/**static/images/a-image-file.jpg_ Is a bug?",Possibly related: If I link to a relative URL in a .md file like so: ``` markdown [contact me](/pages/contact) ``` the processed file contains a link to `../.././pages/contact/` which effectively points to `<link> RELATIVE_URLS is set to True
3052375,4,almet,2012-10-25T09:57:22+00:00,"SET in pelican.conf.py: `STATIC_PATHS = [""images"",]` Post a post with: `![ALT-Description](images/a-image-file.jpg)` In the post the image links to: _<link> your-site.com/static/images/a-image-file.jpg_ The output is correct and the image show in entrys, archives, etc. **Working as intended**. NOW do the same in a PAGE file: Create in /pages/ a page file for example `about.md` with a image using same code: `![ALT-Description](images/a-image-file.jpg)` Now in the page the image links to: _<link> your-site.com/**pages/**static/images/a-image-file.jpg_ Is a bug?",This behavior is being rewritten and will come as part of .
3500667,0,draftcode,2012-03-12T07:37:46+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?","I've tried something around this. When I wrote a post like: ``` .. image:: images/image.jpg ``` it was converted to: ``` <img src=""static/images/image.jpg""> ``` in the generated article and: ``` <img src=""images/image.jpg""> ``` in the feed. We might need some conversion on URLs in the generated feeds. The URLs in the feeds should be the absolute ones."
3500667,1,almet,2012-04-01T11:33:01+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?","The plan wrt to urls and rewriting is to drop this. Pelican will not anymore rewrite the path for the urls. I'm still looking for a proper way to do this, minimizing the user impact, but it will be more maintanable and les surprizing to users."
3500667,2,justinmayer,2012-04-02T00:13:27+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?","Having spent some time on the code for feed URL generation in `writers.py`, I realized that a lot of the trouble I was running into was caused by an early assumption that the link URL and filesystem location would always be the same. It's an understandable assumption, because it's without question the easiest way to approach it: you set the suffix once, and that's how it's displayed in the URL and also in the filesystem. But this approach has its limitations. When you want or need to have a URL that differs from the filesystem location, the above-mentioned assumption begins to get in the way. did a great job solving this problem for article URLs by bifurcating it into two different components (see: commit a7cea63db6), allowing URL ""slug"" and file ""save_as"" settings to be defined separately. Unfortunately, feeds do not currently have that capability, so where you save them in the file system must also be how they appear in the URL links. I think it might be nice to have a similar ability to define separate URL slug and ""save_as"" patterns for feeds. But perhaps I misunderstand the issue at hand. , what do you mean when you say, ""Pelican will not anymore rewrite the path for the urls""?"
3500667,3,ross,2012-06-04T00:20:23+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?","i'm runing in to the same behavior (static is dropped,) but there's also an issue with relative urls in feeds. &lt;img src=""images/image.jpg""&gt; causes the browser to try and load <link> once you're reading it in google reader. if you run things through feedburner it'll be <link>"
3500667,4,ronlipke,2012-06-28T02:54:57+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?","Hardly a work around, but I've gotten past this by setting up a script that copies any images in the /static/images folder to another folder /images. It's messy and wasteful, but until the URL writing is cleaned up it works with minimal impact to the eventual change."
3500667,5,justinmayer,2012-07-06T22:57:44+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?",": For starters, you'll probably be better off if you define SITEURL and set RELATIVE_URLS to False. If that doesn't rectify the issue, for now I'd recommend using absolute URLs in your anchor and img link tags."
3500667,6,DragonDM,2012-07-19T08:22:47+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?",Also seeing this issue.
3500667,7,ross,2012-08-19T23:23:33+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?","sorry it's taken me a while to get back around to try this out. doesn't seem to help anything. i've always had SITEURL defined. setting RELATIVE_URLS=False makes all of the links throughout the html absolute, but the images, both in the html and atom.xml's, are still relative. (latest from pypi, going to check out what's in git now.)"
3500667,8,justinmayer,2012-09-06T23:57:02+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?",I believe this problem should eventually be addressed by the work Alexis is doing in . Stay tuned.
3500667,9,justinmayer,2013-02-10T22:13:13+00:00,"When I create a post using Pelican, images appear fine in the generated article, but in the associated feed, the url is incorrect. For example, the image tag will have a source path: ``` src=""static/images/image.jpg"" ``` whereas the feed will have the path: ``` src=""<link> ``` Note that the `static` directory was dropped from the second path. Am I doing something wrong here?",This issue was resolved by and in . If you use the syntax described in the [latest docs](<link> links to static assets should be generated correctly. Issue closed.
3766106,0,justinmayer,2012-03-23T13:13:14+00:00,"As of commit bc7c8c1 from pull request , it seems that files listed in the FILES_TO_COPY setting are not copied to the output directory. _Steps to reproduce:_ 1. Put a robots.txt file in content/extra/ and set FILES_TO_COPY = (('extra/robots.txt', 'robots.txt'),) 2. Run ""pelican -s pelican.conf.py"" 3. Look for ""robots.txt"" in output directory. _Expected result:_ ""robots.txt"" present in output directory. _Observed result:_ ""robots.txt"" is **not** present in output directory. Ideally, the committed fix would also include a test that ensures files are being copied successfully, particularly since the sample content already includes an ""extra"" file at `samples/content/extra/robots.txt`.","It seems fixed this problem in 0ed6cf7. It'd still be great if someone could implement a test or two for the methods in the StaticGenerator class. I tried myself, but I'm still too unfamiliar with the Pelican internals. (cc: )"
3766106,1,almet,2012-04-01T11:24:15+00:00,"As of commit bc7c8c1 from pull request , it seems that files listed in the FILES_TO_COPY setting are not copied to the output directory. _Steps to reproduce:_ 1. Put a robots.txt file in content/extra/ and set FILES_TO_COPY = (('extra/robots.txt', 'robots.txt'),) 2. Run ""pelican -s pelican.conf.py"" 3. Look for ""robots.txt"" in output directory. _Expected result:_ ""robots.txt"" present in output directory. _Observed result:_ ""robots.txt"" is **not** present in output directory. Ideally, the committed fix would also include a test that ensures files are being copied successfully, particularly since the sample content already includes an ""extra"" file at `samples/content/extra/robots.txt`.","I think this is covered by the incoming changes by about functional tests (see ). Anyway, it could be better to have a proper test testing the StaticGenerator class, agreed :)"
4372224,0,tomhughes,2012-08-29T08:05:12+00:00,"If someone requests a changeset feed for a user that doesn't exist, the feed should give an HTTP 404. It currently seems to give a valid feed for the user that edited most recently.","When you say the changeset ""feed"" are you referring to the RSS feed only? or does this apply to the web view as well?"
4372224,1,hughbris,2012-10-11T22:58:22+00:00,"If someone requests a changeset feed for a user that doesn't exist, the feed should give an HTTP 404. It currently seems to give a valid feed for the user that edited most recently.","Whether feed or html, suspect 404 is not the correct response in these situations. Can't quite determine what the appropriate code should be. If we take the view that the resource is a search, then what we get is an empty list of search results. The resource is perfectly valid, so 200. Another perspective is that request is ""bad"", because the parameter is invalid (debatable), so ""400 Bad Request"". This is defined as a generic client-side error anyway, so I'm sure it can be justified. A quick search shows me [Foursquare are also taking this approach in their API](<link> None of the other 4xx codes seem appropriate to me. If you think we're overthinking this, it's in the API this most matters (outside the scope of this ticket, but they should align). From a quick scan, it looks like OSM's API returns 404 when an id parameter can't be matched (e.g. <link> ). Perhaps that should be up for consideration in 0.7."
4372224,2,gravitystorm,2012-10-12T01:06:47+00:00,"If someone requests a changeset feed for a user that doesn't exist, the feed should give an HTTP 404. It currently seems to give a valid feed for the user that edited most recently.","There's plenty of other places where the API gives inappropriate response codes - 412 precondition failed being my biggest bugbear. (Un?)fortunately we haven't had an API change in a while. However, I think that when you make a valid request (""give me the feed, here's the username"") for a resource that doesn't exist (""no feed found for the username you gave""), 404 Not Found is the correct response."
4372224,3,hughbris,2012-10-12T02:57:32+00:00,"If someone requests a changeset feed for a user that doesn't exist, the feed should give an HTTP 404. It currently seems to give a valid feed for the user that edited most recently.","> There's plenty of other places where the API gives inappropriate response codes Well, let's not get started on HTTP in the 0.6 API. I assume the wiki (and not here) is still the best place to [debate this](<link> and [plan for 0.7](<link> ?? (that's a question :) And let's be clear that 404 is correct for now just because it aligns with the current 0.6 API. > However, I think that when you make a valid request (""give me the feed, here's the username"") for a resource that doesn't exist (""no feed found for the username you gave""), 404 Not Found is the correct response. Sorry, being indulgent, but I do find the issue interesting. I think you mean you see the user as an intrinsic part of the resource, rather than just a parameter to the changeset result. I'm comfortable _enough_ with that interpretation, but I'd defer to anyone with examples based on usage in the wild. What works best for API users? I think I'd like a distinction between ""that virtual path is nonexistent"" and ""a parameter value isn't working for me""."
4372224,4,tomhughes,2012-10-12T13:26:53+00:00,"If someone requests a changeset feed for a user that doesn't exist, the feed should give an HTTP 404. It currently seems to give a valid feed for the user that edited most recently.","The basis of REST is that yes, that is an intrinsic part of the name of the resource and hence a 404 would seem to be correct here. At least for users that have never existed - for a deleted user 410 would be appropriate."
4372224,5,tmcw,2012-10-12T13:32:33+00:00,"If someone requests a changeset feed for a user that doesn't exist, the feed should give an HTTP 404. It currently seems to give a valid feed for the user that edited most recently.",I'd love a restart of the 0.7 conversation: the [childish trolling of the last one](<link> combined with the feature-creep make it extremely hard for a (relative) outsider to understand what's high-priority.
4372224,6,tomhughes,2012-10-12T13:35:13+00:00,"If someone requests a changeset feed for a user that doesn't exist, the feed should give an HTTP 404. It currently seems to give a valid feed for the user that edited most recently.","The problem is that the last one wasn't driven by people who were actually going to implement anything, it was a bunch of end users demanding free ponies... Certainly I wouldn't suggest anybody pay much attention to that wiki page as it really is very silly in many places."
4372224,7,gravitystorm,2017-03-30T13:41:44+00:00,"If someone requests a changeset feed for a user that doesn't exist, the feed should give an HTTP 404. It currently seems to give a valid feed for the user that edited most recently.",I can't reproduce the originally reported issue. A lot of the code in this area has changed since 2012 so I'm marking this as closed. If anyone can reproduce it then of course we'll reopen.
4695046,0,almet,2012-05-23T07:15:44+00:00,"Please allow content creators to define the cutoff/truncation point for summaries. This would allow for a cleaner break at the end of a sentence or paragraph, as opposed to the current system which appears arbitrary with respect to the content. EDIT: To clarify, the cutoff is optionally defined in each article, for context-sensitive summary breakpoints.","The way I would do this is by specifying either a setting in the global settings and a setting as a metadata information in the posts. If you want to add these in the code base, that should be fairly simple to do."
4695046,1,almet,2012-06-09T22:29:51+00:00,"Please allow content creators to define the cutoff/truncation point for summaries. This would allow for a cleaner break at the end of a sentence or paragraph, as opposed to the current system which appears arbitrary with respect to the content. EDIT: To clarify, the cutoff is optionally defined in each article, for context-sensitive summary breakpoints.",Do you want to work on this?
4695046,2,justinmayer,2012-07-09T13:49:05+00:00,"Please allow content creators to define the cutoff/truncation point for summaries. This would allow for a cleaner break at the end of a sentence or paragraph, as opposed to the current system which appears arbitrary with respect to the content. EDIT: To clarify, the cutoff is optionally defined in each article, for context-sensitive summary breakpoints.",": Just wondering if you are interested in working on this within the next few days. We are trying to put together a 3.0 release very soon, and it would be helpful to know whether we should mark this issue for inclusion in 3.0. Would you please let me know? Thanks!"
4695046,3,almet,2012-09-02T11:08:07+00:00,"Please allow content creators to define the cutoff/truncation point for summaries. This would allow for a cleaner break at the end of a sentence or paragraph, as opposed to the current system which appears arbitrary with respect to the content. EDIT: To clarify, the cutoff is optionally defined in each article, for context-sensitive summary breakpoints.","This could be done with docutils/markdown extensions, to be the more generic possible. I'm wondering how the other static blog generators are handling this. Any idea?"
4695046,4,sam-d,2012-11-16T21:18:52+00:00,"Please allow content creators to define the cutoff/truncation point for summaries. This would allow for a cleaner break at the end of a sentence or paragraph, as opposed to the current system which appears arbitrary with respect to the content. EDIT: To clarify, the cutoff is optionally defined in each article, for context-sensitive summary breakpoints.",I remember one static blog generator (hyde?) where you could define Jinja2 blocks in your docutils/markdown text and you would have them available in your templates. I found this a very clean solution
4695046,5,onlyhavecans,2013-03-03T17:10:35+00:00,"Please allow content creators to define the cutoff/truncation point for summaries. This would allow for a cleaner break at the end of a sentence or paragraph, as opposed to the current system which appears arbitrary with respect to the content. EDIT: To clarify, the cutoff is optionally defined in each article, for context-sensitive summary breakpoints.",Implemented by
4920642,0,tj,2012-06-06T01:22:28+00:00,"Express 2.5.9 using `app.all(string, function)`. The route: `"":ids(x(y|z)+)""` incorrectly compiles to: `/^(?:(x(y|z))+)\/?$/i` The plus operator should be applied to only `(y|z)`, but the operator applies to `x(y|z)` in its entirety.","ah - yeah that's from the non-greedy paren match. i dont think you can express balanced matches with js regexps, we would have to fiddle with the string"
4920642,1,davidmurdoch,2012-06-06T13:53:50+00:00,"Express 2.5.9 using `app.all(string, function)`. The route: `"":ids(x(y|z)+)""` incorrectly compiles to: `/^(?:(x(y|z))+)\/?$/i` The plus operator should be applied to only `(y|z)`, but the operator applies to `x(y|z)` in its entirety.",I found that wrapping the inner matching group and plus operator with another set of parenthesis fixes it (sorta). I'd love to take a stab at fixing it. Off the top of your head...any idea where I the offending code would be?
4920642,2,tj,2012-06-06T15:39:21+00:00,"Express 2.5.9 using `app.all(string, function)`. The route: `"":ids(x(y|z)+)""` incorrectly compiles to: `/^(?:(x(y|z))+)\/?$/i` The plus operator should be applied to only `(y|z)`, but the operator applies to `x(y|z)` in its entirety.","it's in the utils.js file, there's a method that converts a string to a regexp"
4920642,3,davidmurdoch,2012-06-07T18:30:05+00:00,"Express 2.5.9 using `app.all(string, function)`. The route: `"":ids(x(y|z)+)""` incorrectly compiles to: `/^(?:(x(y|z))+)\/?$/i` The plus operator should be applied to only `(y|z)`, but the operator applies to `x(y|z)` in its entirety.","I hacked a parser together and some tests: <link> It's a hideous ""solution"" and probably insanely slow, but it passes the tests. I don't have time to optimize it ... but if someone wants to for me please feel free. :-)"
5193915,0,justinmayer,2012-06-21T15:05:19+00:00,"This is loosely related to . If the SITEURL is not defined as a fully qualified URL, the resulting Atom feed is not valid according to the feed validator. line 2, column 198: id must be a full and valid URL: .././ [help] ... en.atom.xml"" rel=""self""></link><id>.././</id><updated>2012-04-22T19:48:4 ... As you can see the ID is just a relative something and not an URL. First I thought that setting FEED_DOMAIN gets rid of this issue but that is not the case either.","Generally speaking, Pelican currently works best when SITEURL is defined. As far as I understand it, it's impossible to generate a valid Atom feed without knowing the site domain. I'll try to note that in the docs. That said, I believe you are correct that specifying FEED_DOMAIN should be sufficient (but apparently isn't). The title of this issue should probably be: ""Ensure links in feeds are always absolute"""
5193915,1,almet,2012-07-04T22:09:28+00:00,"This is loosely related to . If the SITEURL is not defined as a fully qualified URL, the resulting Atom feed is not valid according to the feed validator. line 2, column 198: id must be a full and valid URL: .././ [help] ... en.atom.xml"" rel=""self""></link><id>.././</id><updated>2012-04-22T19:48:4 ... As you can see the ID is just a relative something and not an URL. First I thought that setting FEED_DOMAIN gets rid of this issue but that is not the case either.","We should probably issue a warning if SITEURL is not defined, what do you think?"
5193915,2,justinmayer,2012-07-04T23:50:44+00:00,"This is loosely related to . If the SITEURL is not defined as a fully qualified URL, the resulting Atom feed is not valid according to the feed validator. line 2, column 198: id must be a full and valid URL: .././ [help] ... en.atom.xml"" rel=""self""></link><id>.././</id><updated>2012-04-22T19:48:4 ... As you can see the ID is just a relative something and not an URL. First I thought that setting FEED_DOMAIN gets rid of this issue but that is not the case either.","I thought about that, but there are advantages to leaving it undefined when you're developing locally. I don't know that it makes sense to annoy folks with a constant warning every time they generate if they already understand what they're doing. Instead, I think the solution is in the documentation and the quickstart script. I have a potential solution running locally that is about 75% of the way there. I'll issue a pull request once I have something for folks to review, hopefully sometime this weekend."
5193915,3,almet,2012-07-05T09:16:12+00:00,"This is loosely related to . If the SITEURL is not defined as a fully qualified URL, the resulting Atom feed is not valid according to the feed validator. line 2, column 198: id must be a full and valid URL: .././ [help] ... en.atom.xml"" rel=""self""></link><id>.././</id><updated>2012-04-22T19:48:4 ... As you can see the ID is just a relative something and not an URL. First I thought that setting FEED_DOMAIN gets rid of this issue but that is not the case either.","If it's only for local deployment, then a warning is enough, IMO."
5193915,4,justinmayer,2012-07-09T14:08:35+00:00,"This is loosely related to . If the SITEURL is not defined as a fully qualified URL, the resulting Atom feed is not valid according to the feed validator. line 2, column 198: id must be a full and valid URL: .././ [help] ... en.atom.xml"" rel=""self""></link><id>.././</id><updated>2012-04-22T19:48:4 ... As you can see the ID is just a relative something and not an URL. First I thought that setting FEED_DOMAIN gets rid of this issue but that is not the case either.","My problems with displaying that warning are (1) there are valid reasons one might want to generate with those settings and (2) it really only affects feeds. But I agree that the warning could have significant value and think the solution is to display a warning when SITEURL is undefined **and** either FEED or FEED_RSS are set to `True`. If both FEED and FEED_RSS are `False`, there's really no reason to display a warning (and no feeds should be generated either: see ). I've already assigned myself a decent number of other issues. Anyone willing to help out and implement this small change? :smile:"
5193915,5,justinmayer,2012-07-20T13:16:02+00:00,"This is loosely related to . If the SITEURL is not defined as a fully qualified URL, the resulting Atom feed is not valid according to the feed validator. line 2, column 198: id must be a full and valid URL: .././ [help] ... en.atom.xml"" rel=""self""></link><id>.././</id><updated>2012-04-22T19:48:4 ... As you can see the ID is just a relative something and not an URL. First I thought that setting FEED_DOMAIN gets rid of this issue but that is not the case either.",Fixed by in . Issue closed. Yay! :clap:
5384064,0,justinmayer,2012-07-02T14:01:38+00:00,"In Rest, you can include emoticons images by using substitutions: Example: ``` This is a |smile| symbol ``` This is doable if you add a definition for that image somewhere in the rest ``` .. |smile| image:: smile.png ``` Proposal : include a library of emoticons images, we can use in our blog posts I don't know about MD though","For Markdown, it looks like someone has already taken a stab at writing an [emoticon extension for Python-Markdown](<link> Given that it's only a Gist at the moment, we'd have to test it, modify if necessary, and then package/host it properly somewhere."
5384064,1,almet,2012-10-25T12:27:43+00:00,"In Rest, you can include emoticons images by using substitutions: Example: ``` This is a |smile| symbol ``` This is doable if you add a definition for that image somewhere in the rest ``` .. |smile| image:: smile.png ``` Proposal : include a library of emoticons images, we can use in our blog posts I don't know about MD though","That's something to be handled by markdown and/or rst extensions, not by pelican itself."
5429798,0,almet,2012-07-04T15:16:47+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""",How are you running the tests?
5429798,1,onlyhavecans,2012-07-04T15:26:49+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""","The error comes up any way I run the test, before reporting I did the following; mkvirtualenv pelicantest git://github.com/ametaireau/pelican.git pip install $(cat dev_requirements.txt) unit2 discover I narrowed down to what reports by running the tests through PyCharm"
5429798,2,almet,2012-07-04T16:14:27+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""","that's weird, I don't have anything like this. I have a warning 'No handlers could be found fNo handlers could be found for logger ""pelican.contents""or logger ""pelican.contents""' tho, but that's not an error."
5429798,3,onlyhavecans,2012-07-04T16:24:29+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""","You are right, it's not a test failure but it is a warning. I apologize for not being clearer. Is this expected behavior?"
5429798,4,justinmayer,2012-07-05T17:53:43+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""","I'm seeing the same warning (_No handlers could be found for logger ""pelican.contents""_). I don't believe it's the expected behavior. I'm also seeing the following: ``` sh: pandoc: command not found ``` I must have missed the memo... Did Pandoc at some point become a required dependency for running the tests? It would be one thing if we could simply include it in dev_requirements.txt, but since Pandoc appears to be written in Haskell, installation is (relatively speaking) more complicated."
5429798,5,onlyhavecans,2012-07-05T19:41:49+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""",FYI: running the tests with nose does NOT produce the error (Travis runs it's tests with nose) --- pandoc IMO is a pain to install.[^HOMEBREW] It's not a requirement as the tests that require pandoc can be be skipped. That warning is superfluous considering unit will tell you why tests are skipped if you ask it. [^HOMEBREW]: The package installer is easy but I use homebrew in OS X which recommends you don't use those. The homebrew method for pandoc is `brew install haskell-platform && cabal install pandoc`. Then you have to add $HOME/.cabal/bin to your path. This is a very long compile.
5429798,6,justinmayer,2012-07-05T19:48:05+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""","A very long compile, and ~150MB of Haskell infrastructure. Could we not test for the presence of Pandoc and then output something like the following? ``` Pandoc not installed; related tests skipped. ```"
5429798,7,onlyhavecans,2012-07-05T20:08:18+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""","> Pandoc not installed; related tests skipped. Well that's what it DOES, but not what it says... yet"
5429798,8,justinmayer,2013-03-19T14:38:35+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""",Hey BunnyMan. Any progress on this front?
5429798,9,justinmayer,2013-03-27T20:09:53+00:00,"I'm not sure if this is resolved in but when I pull a fresh repo and run tests I get the following error in test_direct_templates_save_as_default: No handlers could be found for logger ""pelican.contents""",mentioned this on IRC recently as well. Perhaps he might be able to assist?
5946066,0,almet,2012-10-25T13:19:50+00:00,"Right now it seems that if I accidentally define the same slug, one of the articles arbitrarily wins and may (depending on my ARTICLE_\* settings) overwrite some other article. Ideally I would like the ability to see an error in that case as a safety check to avoid accidentally blowing away content when I publish. Currently there's a warning for overlapping slugs in utils.process_translations, but I would like the ability for an error and non-zero exit status when overwriting other content to handle aborting in an automated publish script more easily.","Yep, this makes sense. Including for 3.1 release."
5946066,1,Rogdham,2013-04-14T15:12:13+00:00,"Right now it seems that if I accidentally define the same slug, one of the articles arbitrarily wins and may (depending on my ARTICLE_\* settings) overwrite some other article. Ideally I would like the ability to see an error in that case as a safety check to avoid accidentally blowing away content when I publish. Currently there's a warning for overlapping slugs in utils.process_translations, but I would like the ability for an error and non-zero exit status when overwriting other content to handle aborting in an automated publish script more easily.","I've started working on that: . Two different things implemented: - if several posts have the same slug and the same language, a warning is displayed to the user (before it was only for non-translation posts) - if two templates generating files which would override a previously generated one, a critical error is displayed to the user, and `pelican` exits with non-zero status code It needs more testing, in particular to know the impact on performances."
5946066,2,Rogdham,2013-04-14T17:36:43+00:00,"Right now it seems that if I accidentally define the same slug, one of the articles arbitrarily wins and may (depending on my ARTICLE_\* settings) overwrite some other article. Ideally I would like the ability to see an error in that case as a safety check to avoid accidentally blowing away content when I publish. Currently there's a warning for overlapping slugs in utils.process_translations, but I would like the ability for an error and non-zero exit status when overwriting other content to handle aborting in an automated publish script more easily.",gave me a setting with 1419 posts to measure performances. Before: `make html 89.01s user 1.29s system 87% cpu 1:43.53 total` After: `make html 89.68s user 1.26s system 90% cpu 1:41.02 total` I can conclude that it does not have bad impact on performances.
6315488,0,onlyhavecans,2012-08-23T21:43:32+00:00,"As far as I can tell, there's not currently a way to add next / previous links to article pages? I think this would be extremely useful! Unfortunately I don't have the skill to fork and do it myself.",+1 I will try to add this when I get time unless someone else gets to it first
6315488,1,almet,2012-10-25T13:14:34+00:00,"As far as I can tell, there's not currently a way to add next / previous links to article pages? I think this would be extremely useful! Unfortunately I don't have the skill to fork and do it myself.","Cool. That could be added as a plugin , modifying the changes inthe context before sending it to the writers."
6315488,2,will-hart,2012-12-30T18:32:15+00:00,"As far as I can tell, there's not currently a way to add next / previous links to article pages? I think this would be extremely useful! Unfortunately I don't have the skill to fork and do it myself.","The pull request above implements one solution to this... however the 'next' and 'previous' links are considered in chronological order regardless of category, tags, etc."
6315488,3,beetleb,2012-12-31T21:51:48+00:00,"As far as I can tell, there's not currently a way to add next / previous links to article pages? I think this would be extremely useful! Unfortunately I don't have the skill to fork and do it myself.","> however the 'next' and 'previous' links are considered in chronological order regardless of category, tags, etc. Isn't that how it should be? While it would be nice to have the option to have it show by tag when you're only viewing the articles corresponding to a tag, wouldn't that generate way too much static content?"
6315488,4,will-hart,2012-12-31T22:29:43+00:00,"As far as I can tell, there's not currently a way to add next / previous links to article pages? I think this would be extremely useful! Unfortunately I don't have the skill to fork and do it myself.","Yes, that's how I will be using it. Some people may want ""next in category"" or ""previous in category"" which wouldn't require too much more work (would probably be better implemented in a plugin) but I haven't done this."
6315488,5,almet,2013-01-01T21:03:56+00:00,"As far as I can tell, there's not currently a way to add next / previous links to article pages? I think this would be extremely useful! Unfortunately I don't have the skill to fork and do it myself.","Yes, that should be implemented as a plugin. Closing since this isn't a feature of pelican core."
